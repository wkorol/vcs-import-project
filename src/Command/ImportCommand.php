<?php
namespace App\Command;

use App\Controller\GithubController;


use App\Repository\OrgRepository;
use App\Services\DBService;
use Symfony\Component\Console\Command\Command;
use Symfony\Component\Console\Input\InputInterface;
use Symfony\Component\Console\Output\OutputInterface;
use Symfony\Component\Console\Input\InputArgument;



class ImportCommand extends Command {
    protected static $defaultName = 'import:repository';

    private $dbService;
    private $orgRepository;
    public function __construct(DBService $dbService, OrgRepository $orgRepository)
    {
        $this->orgRepository = $orgRepository;
        $this->dbService = $dbService;



        parent::__construct();
    }


    protected function configure()
    {
        $this->addArgument('username', InputArgument::REQUIRED, 'Organisation Name');
        $this->addArgument('provider', InputArgument::REQUIRED, 'Provider Name');

        parent::configure(); // TODO: Change the autogenerated stub
    }
    protected function execute(InputInterface $input, OutputInterface $output): int
    {

        $username = $input->getArgument('username');
        $provider = $input->getArgument('provider');
    
        if($this->dbService->checkTokenExists()) {

        if (!$this->orgRepository->findOneBy(array('name' => $username))) {
                if($this->dbService->importToDb($username, $provider)) {
                    $output->writeln('Successfully inserted ' . $username . ' repositories to DB');
                    RETURN COMMAND::SUCCESS;
                }
                $output->writeln('Check org name, it doesnt exists in Github API');
                    RETURN COMMAND::FAILURE;
            }  
            $output->writeln('You have already imported this org repositories');
            RETURN COMMAND::FAILURE;
            
        }
                $output->writeln('Please set GITHUB API Token in .env file');
                RETURN COMMAND::FAILURE;
        


        return Command::SUCCESS;
    }

}